---
# NOTE: That didn't work, thus use of instance with nested virtualization enabled.

compute_engine_instance:
  image_project: cirrus-images
  image: family/docker-kvm
  platform: linux
  cpu: 4
  memory: 16G
  disk: 100
  nested_virtualization: true

env:
  DEBIAN_FRONTEND: noninteractive
  HOME: "$CIRRUS_WORKING_DIR"
  PACKER_TMP_DIR: "$CIRRUS_WORKING_DIR/.packer.d"
  S3CMD_ACCESS_KEY: ENCRYPTED[2165ad09060557336a041cd1874c36ef97e3a401b70411b9f95656e6ac380bec8f1dbb16edcc87c295cab617995cb957]
  S3CMD_BUCKET: ENCRYPTED[05c5c380218da332278be9cdf080b523760b1c63245e3f432447ba61a00dc34842e3454f16f23ae786dd75b8c340138c]
  S3CMD_HOST: ENCRYPTED[6bd276402a1b4012bf3e4c30ccd82004521135a148ee8ce3f41356d1a996dd019a512e58c8b756e86233b9e01d726991]
  S3CMD_SECRET_KEY: ENCRYPTED[81c29650386ef5dfd116abd33a20201b4ce1eb1b285a9ff7a395bac8779004881ce4e8c0cd3ea9f9ba94a95be67502c5]

task:
  skip: "!changesInclude('.cirrus.yml', '**.{json}', 'dev/**', 'http/**', 'scripts/**')"

  install_script:
    - apt-get update
    - apt-get install -y qemu-kvm curl git software-properties-common s3cmd
    - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
    - apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com focal main"
    - apt-add-repository --yes --update ppa:ansible/ansible
    - apt-get install -y packer ansible

  submodules_script:
    - git submodule init
    - git submodule update

  validate_packer_configurations_script:
    - packer validate -syntax-only ubuntu-20.04-amd64.json
    - packer validate -syntax-only ubuntu-20.04-amd64-efi.json

  build_ubuntu2004_amd64_legacy_script: mv http/preseed.cfg-example http/preseed.cfg && sed -i 's/TODO/ubuntu/g' http/preseed.cfg && packer build ubuntu-20.04-amd64.json && mkdir ./images/ && mv ./builds/* ./images/

  build_ubuntu2004_amd64_uefi_script: rm -rf ./builds/ && packer build ubuntu-20.04-amd64-efi.json && mv ./builds/* ./images/

  push_task:
    only_if: $CIRRUS_BRANCH == 'main'

    push_script: cd ./images/ && s3cmd --host="${S3CMD_HOST}" --host-bucket="${S3CMD_HOST}" --access_key="${S3CMD_ACCESS_KEY}" --secret_key="${S3CMD_SECRET_KEY}" sync . "s3://${S3CMD_BUCKET}"
